version: "3.9"

services:
  app:
    container_name: app
    build:
      context: .
      target: main_app
    ports:
      - 8080:8080
    restart: always
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_started
    links:
      - db:db
    networks:
      - project_network

  migrations:
    restart: "no"
    container_name: migrations
    build:
      context: .
      target: apply_migrations
    depends_on:
      db:
        condition: service_healthy
    links:
      - db:db
    networks:
      - project_network

  db:
    container_name: db
    image: postgres:15.2-alpine
    restart: always
    
    environment:
      POSGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
      POSGRES_PORT: 5432
    ports:
      -  5432:5432

    networks:
      - project_network
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
      project_network:
          driver: bridge